StudentGroupDaoSql.getStudents=select * from students where (gpa>=:minGpa or :minGpa IS NULL) and (gpa<=:maxGpa or :maxGpa IS NULL) and (group_id=:groupId or :groupId IS NULL)
StudentGroupDaoSql.addStudent=insert into students (student_id, name, gpa, group_id) values (:studentId, :studentName, :gpa, :groupId)
StudentGroupDaoSql.getStudentById=select * from students where student_id=:studentId
StudentGroupDaoSql.getStudentsCount=select count(student_id) from students where group_id=:groupId or :groupId IS NULL
StudentGroupDaoSql.updateStudent=update students set name=:studentName, gpa=:gpa, group_id=:groupId where student_id=:studentId
StudentGroupDaoSql.deleteStudent=delete from students where student_id=:studentId
StudentGroupDaoSql.getGroups=select * from groups where (graduation_date>=:minGradDate or :minGradDate IS NULL) and (graduation_date<=:maxGradDate or :maxGradDate IS NULL)
StudentGroupDaoSql.addGroup=insert into groups (group_id, name, graduation_date) values (:groupId, :groupName, :gradDate)
StudentGroupDaoSql.getGroupById=select * from groups where group_id=:groupId
StudentGroupDaoSql.getGroupByName=select * from groups where name=:groupName
StudentGroupDaoSql.getGroupsCount=select count(group_id) from groups where (graduation_date>=:minGradDate or :minGradDate IS NULL) and (graduation_date<=:maxGradDate or :maxGradDate IS NULL)
StudentGroupDaoSql.getStudentsGpa =select avg(gpa) from (select gpa from students where group_id=:groupId or :groupId IS NULL) as stud_gpa;
StudentGroupDaoSql.updateGroup=update groups set name=:groupName, graduation_date=:gradDate where group_id=:groupId
StudentGroupDaoSql.deleteGroup=delete from groups where group_id=:groupId